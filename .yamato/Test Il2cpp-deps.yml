# Creates an IL2CPP branch test-mono-il2cpp-deps-[unity-version] and updates stevedore / il2cpp deps file with
# the latest commit hash from the corresponding Mono branch. Intended to be used for testing Mono changes
# when used within IL2CPP (i.e. to test what 'Update Il2cpp-deps' will do when run 'for real').
name: Test Mono Il2cpp-deps [Manual] [Existing-Branch]

agent:
  type: Unity::VM
  image: platform-foundation/windows-vs2019-prtools-bokken:latest
  flavor: b1.xlarge 

variables:
  BACKPORT_BRANCH: "2021.3"

dependencies:
  - .yamato/Publish To Stevedore.yml

# YAMATO_SOURCE_DIR=C:\build\output\Unity-Technologies\mono (mono repo checkout) - all command steps start in here
# YAMATO_WORK_DIR=C:\build\output
# UNITY_SOURCE_PRTOOLS_DIR=C:\buildslave\unity\build
# PRTOOLS_BUILD_DIR=C:\buildslave\unity
commands:

    # Step 1 - clone PRTools into $env:YAMATO_WORK_DIR\prtools (C:\build\output\prtools)
    - command: |

        cd $env:YAMATO_WORK_DIR

        git clone git@github.cds.internal.unity3d.com:unity/prtools.git
        cd prtools
        git checkout add-TestMonoIl2cppDeps-option

    # Step 2 - clone unity/il2cpp into $env:PRTOOLS_BUILD_DIR\il2cpp (C:\buildslave\unity\il2cpp)
    - command: |

        cd $env:PRTOOLS_BUILD_DIR

        git clone --recurse-submodules https://github.cds.internal.unity3d.com/unity/il2cpp.git il2cpp

    # Step 3 - With working dir $env:UNITY_SOURCE_PRTOOLS_DIR (C:\buildslave\unity\build) run PRTools from $env:YAMATO_WORK_DIR\prtools (C:\build\output\prtools) (--test-mono-il2cpp-deps)
    # pointing PRTools to the IL2CPP checkout we did above (in $env:PRTOOLS_BUILD_DIR\il2cpp (C:\buildslave\unity\il2cpp))
    - command: |

        cd $env:UNITY_SOURCE_PRTOOLS_DIR
        git config --global core.longpaths true
        cmd /v /c dotnet run --project $env:YAMATO_WORK_DIR\prtools\PRTools\PRTools.csproj --test-mono-il2cpp-deps=$env:YAMATO_SOURCE_DIR/stevedore/artifactid.txt --backport=$env:BACKPORT_BRANCH --custom-il2cpp-repo-path=$env:PRTOOLS_BUILD_DIR/il2cpp --github-api-token=$env:IL2CPP_GITHUB_TOKEN --yamato-api-token=$env:YAMATO_TOKEN --yamato-long-lived-token --no-slack
        if ($LASTEXITCODE -ne 0) { echo "PRTools failed"; exit $LASTEXITCODE }

    # Step 4 - Run test on our IL2CPP dir:
    - command: |

        cd $env:PRTOOLS_BUILD_DIR/il2cpp
        git status
        git log -n 3
        perl test.pl --build-machine --bee-update-verification ; if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

interpreter: powershell
timeout: 2
