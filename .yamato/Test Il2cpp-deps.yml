# Creates an IL2CPP branch test-mono-il2cpp-deps-[unity-version] and updates stevedore / il2cpp deps file with
# the latest commit hash from the corresponding Mono branch. Intended to be used for testing Mono changes
# when used within IL2CPP (i.e. to test what 'Update Il2cpp-deps' will do when run 'for real').
name: Test Mono Il2cpp-deps [Manual] [Existing-Branch]

agent:
  type: Unity::VM
  image: platform-foundation/windows-vs2019-prtools-bokken:latest
  flavor: b1.xlarge 

variables:
  MONO_REV: "latest" # TODO we're not using this ATM...
  BACKPORT_BRANCH: "2021.3" 

# YAMATO_SOURCE_DIR=C:\build\output\Unity-Technologies\mono (mono repo checkout) - commands start in here
# YAMATO_WORK_DIR=C:\build\output
# UNITY_SOURCE_PRTOOLS_DIR=C:\buildslave\unity\build
# PRTOOLS_BUILD_DIR=C:\buildslave\unity
commands:

    # Step 1 - clone PRTools into %YAMATO_WORK_DIR%\prtools (C:\build\output\prtools)
    - command: |

        git status

        %CD%
        DIR

        cd %YAMATO_WORK_DIR%

        %CD%
        DIR

        git clone git@github.cds.internal.unity3d.com:unity/prtools.git
        cd prtools
        %CD%
        DIR
        git checkout add-TestMonoIl2cppDeps-option

    # Step 2 - clone unity/unity into %PRTOOLS_BUILD_DIR%\unity (C:\buildslave\unity\unity)
    # - command: |

        # %CD%
        # DIR

        # cd %PRTOOLS_BUILD_DIR%

        # %CD%
        # DIR

        # git clone --recurse-submodules https://github.cds.internal.unity3d.com/unity/unity.git unity

    # Step 3 - clone unity/il2cpp into %PRTOOLS_BUILD_DIR%\il2cpp (C:\buildslave\unity\il2cpp)
    - command: |

        %CD%
        DIR

        cd %PRTOOLS_BUILD_DIR%

        %CD%
        DIR

        git clone --recurse-submodules https://github.cds.internal.unity3d.com/unity/il2cpp.git il2cpp

    # Step 4 - With working dir %UNITY_SOURCE_PRTOOLS_DIR% (C:\buildslave\unity\build) run PRTools in %YAMATO_WORK_DIR%\prtools (C:\build\output\prtools) (--test-mono-il2cpp-deps)
    - command: |

        DIR %YAMATO_WORK_DIR%
        DIR %YAMATO_WORK_DIR%/prtools

        cd %UNITY_SOURCE_PRTOOLS_DIR%
        git config --global core.longpaths true
        cmd /v /c dotnet run --project %YAMATO_WORK_DIR%/prtools/PRTools.csproj --test-mono-il2cpp-deps=%YAMATO_SOURCE_DIR%/stevedore/artifactid.txt --backport=%BACKPORT_BRANCH% --custom-il2cpp-repo-path=%PRTOOLS_BUILD_DIR%/il2cpp --github-api-token=$IL2CPP_GITHUB_TOKEN --yamato-api-token=$YAMATO_TOKEN --yamato-long-lived-token --no-slack --no-push
        if NOT %errorlevel% == 0 (
          echo "PRTools failed"
          EXIT /B %errorlevel%
        )

timeout: 2
